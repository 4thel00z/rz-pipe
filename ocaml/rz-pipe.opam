opam-version: "2.0"
name: "rz-pipe"
version: "0.0.7"
maintainer: "RizinOrg"
authors: [ "RizinOrg" "Edgar Aroutiounian <edgar.factorial@gmail.com>" ]
license: "BSD-3-Clause"
homepage: "https://github.com/rizinorg/rz-pipe"
dev-repo: "git+https://github.com/rizinorg/rz-pipe"
bug-reports: "https://github.com/rizinorg/rz-pipe/issues"
build: [
	["dune" "subst"] {pinned}
	["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml" {>= "4.03.0"}
  "dune" {>= "2.0"}
  "base-unix"
  "yojson" {>= "1.3.2"} | "yojson-android" {>= "1.3.2"}
]
messages:[
"You need to have rizin installed and in your path"
]

post-messages:[
"Play with rizin interactively from within an OCaml repl like utop"
"Example in utop:"
""
"#require \"rz-pipe\";;"
"let result = Rz.with_command_j ~cmd:\"/j COLUMNS\" \"/bin/ls\";;
val result : Yojson.t =
`List
  [`Assoc
     [(\"offset\", `Int 109075); (\"type\", `String \"string\");
      (\"data\", `String \"eQUOTING_STYLECOLUMNSTABSIZEinvalid\")];
   `Assoc
     [(\"offset\", `Int 118247); (\"type\", `String \"string\");
      (\"data\", `String \"onment variable COLUMNS: %signori\")]]"
{success}]
synopsis: "OCaml interface to rizin"
description: """
Interact with rizin,
See the mli for documentation, example usage in utop:

#require "rz-pipe";;
let result = Rz.with_command_j ~cmd:"/j COLUMNS" "/bin/ls";;
val result : Yojson.t =
`List
  [`Assoc
     [("offset", `Int 109075); ("type", `String "string");
      ("data", `String "eQUOTING_STYLECOLUMNSTABSIZEinvalid")];
   `Assoc
     [("offset", `Int 118247); ("type", `String "string");
      ("data", `String "onment variable COLUMNS: %signori")]]\""""
